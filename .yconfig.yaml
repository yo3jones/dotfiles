generate:

  templateRoot: ./

  destinationRoot: ./dist

  include:
  - .*
  - .config/*
  - .config/*/*
  - .config/*/*/*
  - .config/*/*/*/*
  - .doom.d/*

  exclude:
  - .gitignore
  - .yconfig.yaml

  link: true

  delay: 0

scripts:
  - cmd: bash
    args: -cl

packageManagers:
  - os: linux
    script: sudo apt get install -y
  - os: darwin
    script: brew install

setup:
  # Homebrew
  - name: Homebrew
    os: darwin
    script: |-
      /bin/bash -c \
      "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

  # 1Password
  # Mac App Store

  # Caffeine
  # https://www.macupdate.com/app/mac/24120/caffeine

  # AirBuddy
  # https://v2.airbuddy.app/

  # Mac Fast Key Repeat
  # https://apple.stackexchange.com/questions/10467/how-to-increase-keyboard-key-repeat-rate-on-os-x
  #
  # defaults write -g InitialKeyRepeat -int 10 # normal minimum is 15 (225 ms)
  # defaults write -g KeyRepeat -int 1 # normal minimum is 2 (30 ms)
  #
  # Requires reboot (or log out)
  - name: KeyRepeat
    os: darwin
    script: |-
      defaults write -g InitialKeyRepeat -int 10 \
      && defaults write -g KeyRepeat -int 1

  # Update Deps
  - name: Update Mac Deps
    os: darwin
    script: brew updatee

  # Packages
  - name: Packages
    tags: [ zsh, tmux, nvim, emacs ]
    entries:
      - os: darwin
        packages:
          - git
          - vim
          - fzf
          - ripgrep
          - tmux
          - unzip
          - curl
          - alacritty
          - neofetch
          - zsh
          - neovim
          - cmake
          - libtool
          - wget
          - luarocks

  # Amethyst
  # Tiling Window Manager
  # brew install --cask amethyst
  - name: Amethyst
    os: darwin
    script: brew install --cask amethyst

  # Mac Fonts
  # https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/JetBrainsMono.zip
  - name: Fonts
    os: darwin
    script: |-
      rm -rf .fonts \
      && mkdir .fonts \
      && mkdir .fonts/jetbrains \
      && curl -L \
        https://github.com/ryanoasis/nerd-fonts/releases/download/v2.1.0/JetBrainsMono.zip \
        --output .fonts/JetBrainsMono.zip \
      && unzip .fonts/JetBrainsMono.zip -d .fonts/jetbrains/ \
      && rm .fonts/jetbrains/*Windows*.ttf \
      && cp .fonts/jetbrains/*.ttf /Library/Fonts/ \
      && rm -rf .fonts


  # Alacritty
  # Terminal Emulator
  # https://github.com/alacritty/alacritty

  - name: Oh My Zsh
    tags: zsh
    continueOnError: true
    entries:
      - script: |-
          curl -L \
            https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh \
            --output install-zsh.sh \
          && chmod +x install-zsh.sh \
          && ./install-zsh.sh \
            --unattended \
            --keep-zshrc \
          && rm install-zsh.sh
      - tags: work!
        script: |-
          curl -L \
            $(fwdproxy-config curl) \
            https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh \
            --output install-zsh.sh \
          && chmod +x install-zsh.sh \
          && ./install-zsh.sh \
            --unattended \
            --keep-zshrc \
          && rm install-zsh.sh

  - name: Powerlevel10k
    tags: [ zsh, work ]
    repo: romkatv/powerlevel10k
    dest: ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k

  - name: zsh-autosuggestions
    tags: [ zsh, work ]
    repo: zsh-users/zsh-autosuggestions
    dest: ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions

  - name: work fzf
    tags: work!
    script: chmod +x $HOME/.fzf/bin/fzf

    # Tmux Package Manager
    # ctrl-b I
  - name: tmux tpm
    tags: [ tmux, work ]
    repo: tmux-plugins/tpm
    dest: ~/.tmux/plugins/tpm

  - name: neovim packer install
    tags: [nvim, work]
    repo: https://github.com/wbthomason/packer.nvim
    dest: ~/.local/share/nvim/site/pack/packer/start/packer.nvim

  - name: neovim packer sync
    tags: [nvim, work, sync]
    continueOnError: true
    retry: 2
    script: |-
        nvim --headless -c "autocmd User PackerComplete quitall" -c "PackerSync"

  - name: neovim work
    tags: [nvim, work!]
    retry: 2
    script: |-
      nvim --headless -c "SyncMetaLS" -c "quitall" \

  - name: neovim treesitter install
    tags: [nvim, work]
    retry: 2
    script: |-
      nvim --headless -c "TSInstallSync all" -c "quitall"

  - name: neovim treesitter update
    tags: [nvim, manual!]
    script: |-
      nvim --headless -c "TSUpdateSync" -c "quitall"

  - name: neovim reload dotfiles
    tags: [nvim, reload!]
    script: yconfig generate

  - name: neovim reload dotfiles work
    tags: [nvim, reload! work!]
    script: ./yconfig generate --tag work

  - name: neovim reload sync
    tags: [nvim, reload!]
    script: |-
      nvim --headless -c "autocmd User PackerComplete quitall" -c "PackerSync"

  # GO
  - name: go
    tags: go
    packages: go
  - name: go fumpt
    tags: go
    script: go install mvdan.cc/gofumpt@latest
  - name: golines
    tags: go
    script: go install github.com/segmentio/golines@latest
  - name: go goimports
    tags: go
    script: go install golang.org/x/tools/cmd/goimports@latest
  - name: golangci-lint-langserver
    tags: go
    script: go install github.com/nametake/golangci-lint-langserver@latest
  # - name: go golangci-lint
  #   tags: go
  #   script: go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest
  - name: golangci-lint
    tags: go
    packages: golangci-lint
  - name: go versioner
    tags: go
    script: go install github.com/yo3jones/versioner@latest
  - name: gopls
    tags: go
    script: go install golang.org/x/tools/gopls@latest
  - name: gore
    tags: go
    script: go install github.com/x-motemen/gore/cmd/gore@latest
  - name: gocode
    tags: go
    script: go install github.com/stamblerre/gocode@latest
  - name: godoc
    tags: go
    script: go install golang.org/x/tools/cmd/godoc@latest
  - name: goimports
    tags: go
    script: go install golang.org/x/tools/cmd/goimports@latest
  - name: gorename
    tags: go
    script: go install golang.org/x/tools/cmd/gorename@latest
  - name: guru
    tags: go
    script: go install golang.org/x/tools/cmd/guru@latest
  - name: gotests
    tags: go
    script: go install github.com/cweill/gotests/gotests@latest
  - name: gomodifytags
    tags: go
    script: go install github.com/fatih/gomodifytags@latest

  # C++
  - name: cpp mac
    tags: cpp
    os: darwin
    packages:
      - ccls
      - cmake
      - llvm
      - postgresql
      - asio
      - boost
  - name: cmake-language-server
    tags: cpp
    script: pip3 install cmake-language-server



  # Emacs
  # - name: Emacs
  #   tags: emacs
  #   entries:
  #     - os: darwin
  #       script: |-
  #         brew tap railwaycat/emacsmacport \
  #         && brew install --cask emacs-mac
  - name: Emacs
    tags: emacs
    entries:
      - os: darwin
        script: |-
          brew tap d12frosted/emacs-plus \
          && brew install emacs-plus
  - name: Doom
    tags: [ emacs, doom ]
    repo: doomemacs/doomemacs
    dest: ~/.emacs.d
  - name: Doom Install
    tags: [ emacs, doom ]
    script: ~/.emacs.d/bin/doom install --env --no-config --fonts --force
  - name: Doom Sync
    tags: [ emacs, doom ]
    script: ~/.emacs.d/bin/doom sync

install:

## for work
# curl $(fwdproxy-config curl) -sSL https://raw.githubusercontent.com/alacritty/alacritty/master/extra/alacritty.info | tic -x -


  groups:

    # Opener
    # https://github.com/superbrothers/opener

    - name: deps
      commands:
        - os: linux
          command: |-
            sudo apt update \
            && sudo apt install -y \
              git \
              vim \
              fzf \
              ripgrep \
              zsh \
              curl \
              wget \
              bat \
              tmux \
              cmake \
              automake \
              libtool \
              ninja-build \
              gettext \
              libtool-bin \
              autoconf \
              g++ \
              pkg-config \
              unzip \
              doxygen
# To install useful keybindings and fuzzy completion:
#   /Users/cpj/.brew/opt/fzf/install
        - os: darwin
          command: |-
            brew install \
              git \
              vim \
              fzf \
              ripgrep \
              zsh \
              curl \
              wget \
              bat \
              tmux
        - |-
          sh -c \
            "$(curl -fsSL https://raw.github.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
        - |-
          git clone --depth=1 \
            https://github.com/romkatv/powerlevel10k.git \
            ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k
        - os: darwin
          command: defaults write -g InitialKeyRepeat -int 10
        - os: darwin
          command: defaults write -g KeyRepeat -int 1
        - git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm
        - |-
          git clone \
            https://github.com/zsh-users/zsh-autosuggestions \
            ${ZSH_CUSTOM:-~/.oh-my-zsh/custom}/plugins/zsh-autosuggestions

    - name: gh
      commands:
        - os: linux
          arch: amd64
          command: |-
            curl \
              -fL \
              https://github.com/cli/cli/releases/download/v2.12.1/gh_2.12.1_linux_amd64.deb \
              --output gh_2.12.1_linux_amd64.deb \
            && sudo apt install -y ./gh_2.12.1_linux_amd64.deb

    - name: go
      commands:
        - os: darwin
          arch: arm64
          command: |-
            wget https://go.dev/dl/go1.18.3.darwin-arm64.pkg \
            && open go1.18.3.darwin-arm64.pkg

    - name: go-after
      commands:
        - go install mvdan.cc/gofumpt@latest
        - go install github.com/segmentio/golines@latest
        - go install golang.org/x/tools/cmd/goimports@latest
        - go install github.com/nametake/golangci-lint-langserver@latest
        - go install github.com/golangci/golangci-lint/cmd/golangci-lint@latest

    - name: lazygit
      commands:
        - os: linux
          command: go install github.com/jesseduffield/lazygit@latest
        - os: darwin
          command: brew install jesseduffield/lazygit/lazygit

    - name: nvim
      commands:
        - os: darwin
          command: brew install neovim
        - os: linux
          command: |-
            git clone https://github.com/neovim/neovim \
            && cd neovim \
            && git checkout stable \
            && make \
            && sudo make install \
            && cd .. \
            && rm -rf neovim
        - |-
          rm -rf ~/.local/share/nvim/site/pack/packer/start/packer.nvim \
          ; git clone --depth 1 https://github.com/wbthomason/packer.nvim \
           ~/.local/share/nvim/site/pack/packer/start/packer.nvim
        - nvim --headless -c "autocmd User PackerComplete quitall" -c "PackerSync"
        - nvim --headless -c "TSInstallSync all" -c "quitall"
        - nvim --headless -c "TSUpdateSync" -c "quitall"

#    - name: key-repeat
